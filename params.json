{"name":"Angular Vibrator","tagline":"Angular wrapper for the vibration API","body":"# Angular Vibrator\r\n\r\n####Angular Vibrator is an angular wrapper for the vibration API\r\n\r\nYou want to use the [vibration API](http://www.w3.org/TR/vibration/) on your Angular application? You're at the right place.\r\n\r\n## Demo\r\n\r\nIf you're like me, you're happy when there is some demos.\r\n<br>\r\nSo, you can [see Angular Vibrator live](http://cyrilf.github.io/angular-vibrator/example).\r\n\r\n## Installation\r\n\r\n#### via bower:\r\n```\r\n$ bower install angular-vibrator\r\n```\r\n#### via npm:\r\n```\r\n$ npm install angular-vibrator\r\n```\r\n\r\n## Usage\r\n\r\n1 - Include the vibrator as a dependency for your app.\r\n\r\n```js\r\nangular.module('yourApp', ['angular-vibrator'])\r\n```\r\n\r\n2 - Use `vibrator` service as a dependency in your controller\r\n\r\n```js\r\n .controller('VibrationsCtrl', ['$scope', 'vibrator', function($scope, vibrator){\r\n\r\n   $scope.vibrate = function(duration) {\r\n     vibrator.vibrate(duration);\r\n   };\r\n }]);\r\n```\r\n\r\n3 - Bind it to the view (optional)\r\n\r\n```html\r\n  <body ng-app=\"VibratorDemo\" ng-controller=\"VibrationsCtrl\">\r\n    <!-- some html ... -->\r\n    <input type=\"text\" ng-model=\"duration\">\r\n    <button ng-click=\"vibrate(duration)\">\r\n      Click me (I'll vibrate for {{duration}} ms)\r\n    </button>\r\n    <!-- some html ... -->\r\n  </body>\r\n```\r\n\r\n## Configuration\r\n\r\n**Choose your own sequences**\r\n\r\nBy default the sequences are already defined. But if you want to change it/adapt it to your need you can do it easily:\r\n\r\n```js\r\n angular.module('yourApp', ['angular-vibrator'])\r\n   .config(['vibratorProvider', function(vibratorProvider) {\r\n     // Define your own sequences\r\n     var sequences = {\r\n       default: 900,\r\n       twice: [200, 100, 300],\r\n       long: 2500\r\n     };\r\n\r\n     vibratorProvider.setSequences(sequences);\r\n  }])\r\n ```\r\n\r\nCheckout the [example](https://github.com/cyrilf/angular-vibrator/tree/master/example) folder for more informations/tips.\r\n\r\n## Error Handling\r\n\r\nAngular Vibrator includes error handling through broadcast messages sent from the `$rootScope`. This way you can, in your application, easily catch these errors and do whatever you want with it.\r\n\r\nHere is how you can implement this:\r\n\r\n```js\r\n angular.module('yourApp', ['angular-vibrator'])\r\n   .controller('VibrationsCtrl', ['$scope', function($scope){\r\n\r\n     $scope.$on('vibrator:unsupportedBrowser', function() {\r\n      console.log('Do whatever you want like display a warning on the page');\r\n     });\r\n   }]);\r\n```\r\n\r\n## License\r\n\r\n  Licensed under the MIT license\r\n\r\n[Cyril F - Web developer](http://cyrilf.com)","google":"UA-18914788-9","note":"Don't delete this file! It's used internally to help with page regeneration."}